{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1816cba.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    return (\n        <button onClick={onClick} style={{\n            backgroundColor: color\n        }}\n            className='btn'>\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string, \n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button \n            color={showAdd ? 'red' : 'green'} \n            text={showAdd ? 'Close' : 'Add'} \n            onClick={onAdd} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string,\n}\n\n// CSS in js\n// const headingStyle = {\n//     color: 'red', \n//     backgroundColor: 'black'\n// }\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? \n            'reminder' : ''}`} \n            onDoubleClick= {() => onToggle(task.id)}>\n            <h3>\n                {task.text} <FaTimes style={{ color:\n                 'red', cursor: 'pointer' }}\n                 onClick={() => onDelete(task.id)} />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) =>(\n                <Task \n                key={task.id} \n                task={task} \n                onDelete={onDelete} \n                onToggle={onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('please add task')\n            return\n        }\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input\n                    type='text'\n                    placeholder='Add Task'\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input\n                    type='text'\n                    placeholder='Add Day & Time'\n                    value={day}\n                    onChange={(e) => setDay(e.target.value)}\n                />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input \n                    type='checkbox' \n                    checked={reminder}\n                    value={reminder} \n                    onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState (false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doc Appt',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Hair Appt',\n        day: 'Feb 7th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Work Appt',\n        day: 'Feb 8thth at 2:30pm',\n        reminder: false,\n    },\n\n])\n\n//Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n//Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task)=> task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? {...task, reminder:\n    !task.reminder} : task\n    )\n  );\n}\n  \n  return (\n    <div className='container'>\n      <Header \n        onAdd={() => setShowAddTask\n        (!showAddTask)}\n        showAdd={showAddTask} \n        />\n        {showAddTask && <AddTask onAdd={addTask} \n        />}\n        {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete=\n        {deleteTask} onToggle= {toggleReminder} /> \n      ) : (\n        'No tasks to show'\n      )}\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}